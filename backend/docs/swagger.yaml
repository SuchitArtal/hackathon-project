openapi: 3.0.0
info:
  title: JnanaSetu API
  version: 1.0.0
  description: API documentation for JnanaSetu educational platform

servers:
  - url: http://localhost:3000/api
    description: Development server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        name:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Assessment:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        score:
          type: number
          format: float
        skillGaps:
          type: array
          items:
            type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Roadmap:
      type: object
      properties:
        id:
          type: string
          format: uuid
        userId:
          type: string
          format: uuid
        title:
          type: string
        content:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

paths:
  /auth/register:
    post:
      summary: Register a new user
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
                - name
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                name:
                  type: string
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid input

  /auth/login:
    post:
      summary: Login user
      tags: [Auth]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'
        '401':
          description: Invalid credentials

  /assessments:
    get:
      summary: Get all assessments for the authenticated user
      tags: [Assessments]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of assessments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Assessment'
        '401':
          description: Unauthorized

    post:
      summary: Create a new assessment
      tags: [Assessments]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - score
                - skillGaps
              properties:
                score:
                  type: number
                  format: float
                skillGaps:
                  type: array
                  items:
                    type: string
      responses:
        '201':
          description: Assessment created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assessment'
        '401':
          description: Unauthorized

  /roadmaps:
    get:
      summary: Get all roadmaps for the authenticated user
      tags: [Roadmaps]
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of roadmaps
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Roadmap'
        '401':
          description: Unauthorized

    post:
      summary: Create a new roadmap
      tags: [Roadmaps]
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - content
              properties:
                title:
                  type: string
                content:
                  type: string
      responses:
        '201':
          description: Roadmap created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Roadmap'
        '401':
          description: Unauthorized 